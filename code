import tkinter as tk
from tkinter import messagebox
import random

# Define choices and game logic
choices = ["rock", "paper", "scissors"]

def get_computer_choice():
    return random.choice(choices)

def determine_winner(user_choice, computer_choice):
    if user_choice == computer_choice:
        return "It's a tie!"
    elif (user_choice == "rock" and computer_choice == "scissors") or \
         (user_choice == "scissors" and computer_choice == "paper") or \
         (user_choice == "paper" and computer_choice == "rock"):
        return "You win!"
    else:
        return "You lose!"

# Initialize scores
user_score = 0
computer_score = 0

def update_scores(result):
    global user_score, computer_score
    if "win" in result:
        user_score += 1
    elif "lose" in result:
        computer_score += 1

# User choice handler
def user_choice(choice):
    computer_choice = get_computer_choice()
    result = determine_winner(choice, computer_choice)
    update_scores(result)
    result_label.config(text=f"User: {choice} - Computer: {computer_choice}\n{result}")
    score_label.config(text=f"User Score: {user_score} - Computer Score: {computer_score}")

# Create the main window
root = tk.Tk()
root.title("Rock Paper Scissors")

# Create labels and buttons
prompt_label = tk.Label(root, text="Choose rock, paper, or scissors:", font=("Helvetica", 14))
prompt_label.pack(pady=10)

button_frame = tk.Frame(root)
button_frame.pack()

rock_button = tk.Button(button_frame, text="Rock", command=lambda: user_choice("rock"), width=10)
rock_button.grid(row=0, column=0, padx=5)

paper_button = tk.Button(button_frame, text="Paper", command=lambda: user_choice("paper"), width=10)
paper_button.grid(row=0, column=1, padx=5)

scissors_button = tk.Button(button_frame, text="Scissors", command=lambda: user_choice("scissors"), width=10)
scissors_button.grid(row=0, column=2, padx=5)

result_label = tk.Label(root, text="", font=("Helvetica", 14))
result_label.pack(pady=20)

score_label = tk.Label(root, text="User Score: 0 - Computer Score: 0", font=("Helvetica", 14))
score_label.pack(pady=10)

def play_again():
    global user_score, computer_score
    user_score = 0
    computer_score = 0
    result_label.config(text="")
    score_label.config(text="User Score: 0 - Computer Score: 0")

play_again_button = tk.Button(root, text="Play Again", command=play_again, width=10)
play_again_button.pack(pady=20)

# Function to animate hand gestures (simplified example with text)
def animate_choice(choice, label):
    label.config(text=f"{choice.capitalize()}!")

# Add simple animations
def user_choice_with_animation(choice):
    animate_choice(choice, result_label)
    root.after(1000, lambda: user_choice(choice))

rock_button.config(command=lambda: user_choice_with_animation("rock"))
paper_button.config(command=lambda: user_choice_with_animation("paper"))
scissors_button.config(command=lambda: user_choice_with_animation("scissors"))

# Start the GUI event loop
root.mainloop()
